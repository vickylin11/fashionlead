{"version":3,"sources":["logo.svg","serviceWorker.js","App.js","Login.js","Signup.js","Shoppingcart.js","Home.js","Designers.js","Bags.js","Shoes.js","ProductDetails.js","ProductsByDesigner.js","Checkout.js","Header.js","index.js"],"names":["module","exports","__webpack_require__","p","Boolean","window","location","hostname","match","Component","Login","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","username","password","emptyHelp","_this2","trim","length","setState","fetch","method","body","JSON","stringify","headers","Content-Type","then","response","json","responseJson","err_code","localStorage","setItem","userId","href","alert","message","catch","e","console","log","_this3","react_default","a","createElement","align","className","id","htmlFor","style","color","type","name","width","height","placeholder","value","onChange","evt","target","autoFocus","onClick","handleSubmit","bind","Signup","email","address","unameHelp","emailHelp","pwHelp","data","test","_this4","onBlur","checkEmail","checkUsername","checkPw","Shoppingcart","cartProducts","stockAvailable","subtotal","total","checkedItems","index","currentQuan","pro_quan","currentCartProducts","handleQuanChange","quan","_id","cart_id","confirm","i","pro_price","cartIndex","indexOf","originalCheckItems","splice","unshift","items","checkedProTotal","userid","user_id","date","Date","carts","cartProduct","item","pro_id","pro_name","pro_pic","pro_size","order","order_date","order_items","order_total","cart_ids","orderId","map","cartPro","array","key","reactstrap_es","handleCheckbox","src","alt","increaseQuan","decreaseQuan","handleRemove","showCartProducts","marginLeft","caculateTotal","handleCheckout","altText","caption","Home","loginInfor","activeIndex","next","assertThisInitialized","previous","goToIndex","onExiting","onExited","animating","nextIndex","newIndex","slides","captionText","captionHeader","onClickHandler","direction","directionText","Designers","alldesigners","sort","b","d_name","toUpperCase","designer","fontSize","listDesigners","Bags","Shoes","toggle","allshoes","search","dropdownOpen","indication","prevState","p_price","filter","shoes","p_name","toLowerCase","p_describ","float","border","p_pic","_this5","isOpen","caret","sortByPriceDesc","sortByPriceAsc","filterList","ProductDetails","proId","params","selectedQuan","selectedSize","product","stocks","pics","p_stock","size","stock","for","listSize","ProductsByDesigner","designerDetails","products","pro","fontWeight","d_desc","d_pic","listProductsByDesigner","Checkout","orderedPro","arr","bordered","showOrderedProducts","textAlign","Header","isLoggedin","handleLogOut","light","expand","navbar","marginRight","handleShoppingCart","switchButton","tabs","active","BrowserRouter","Route","exact","path","component","ReactDOM","render","Header_Header","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.161a4378.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\n\nclass App extends Component {\n  state = {\n        data: null\n    };\n\n    componentDidMount() {\n        // Call our fetch function below once the component mounts\n        this.callBackendAPI()\n            .then(res => this.setState({ data: res.express }))\n            .catch(err => console.log(err));\n    }\n    // Fetches our GET route from the Express server. (Note the route we are fetching matches the GET route from server.js\n    callBackendAPI = async () => {\n        const response = await fetch();\n        const body = await response.json();\n\n        if (response.status !== 200) {\n            throw Error(body.message)\n        }\n        return body;\n    };\n\n  render() {\n    return (\n      <div className=\"App\">\n          <p className=\"App-intro\">{this.state.data}</p>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React,{Component} from 'react';\nimport Header from \"./Header\";\n\nexport default class Login extends Component {\n    constructor(props) {\n        super(props);\n        // set state to empty at the begining \n        this.state = {\n            \"username\": \"\",\n            \"password\": \"\",\n            // isRemember: false,\n            emptyHelp: \"\"\n        };\n    }\n\n    //  handleCheckbox(e){\n    //     let isChecked = e.target.checked;\n    //     if(isChecked){\n    //         this.setState({\n    //             isRemember: true\n    //         })\n    //     }else{\n    //         this.setState({\n    //             isRemember: false\n    //         })\n    //     }\n    // }\n    \n\n    handleSubmit(){\n        // Verify empty string \n        if (this.state.username.trim().length === 0 || this.state.password.trim().length === 0){\n            this.setState({emptyHelp:\"* area can not be empty.\"})\n            \n        } else{\n\n        this.setState({emptyHelp:\"\"});\n\n        // if(this.state.isRemember === true){ \n        //         let loginData = {};\n        //         loginData.username = this.state.username;\n        //         loginData.userpassword = this.state.password;\n        //         localStorage.setItem(\"loginInfor\",loginData);\n        //     }else{\n        //         localStorage.removeItem(\"deleteLoginInfor\");\n        //     }\n        \n        \n        // Post request to server side \n        fetch('/login',{\n            method:'post',\n            body: JSON.stringify(this.state),\n            headers: {\"Content-Type\":\"application/json\"},\n        })\n        .then(response=>response.json())\n        .then(responseJson => {\n               \n            if(responseJson.err_code === 0){  \n                // after log in successfully, set username and user ID to local storage\n                localStorage.setItem(\"username\", this.state.username.trim());\n                localStorage.setItem(\"userId\", responseJson.userId);\n                window.location.href=\"/\";\n            }\n            else{\n                alert(responseJson.message);\n            }\n\n        }).catch(function(e){\n            console.log('Oops,error');\n        })\n     }\n    }\n\n\n\n    render(){\n        return(\n\n            <div align=\"center\">\n               \n\n                <div className=\"main\">\n                    <div className=\"header\">\n\n                        <h1>Log In</h1> \n                    </div>\n                    <form id=\"login_form\">\n                        <div className=\"form-group\">\n                            <label htmlFor=\"\">Username: <span style={{color:\"red\"}}>* </span></label>\n                            <input type=\"username\" className=\"form-control\" id=\"username\" name=\"username\" style={{width: 300,height:40}} placeholder=\"Please enter your username\"\n                              value={this.state.username} onChange={evt => this.setState({\"username\":evt.target.value})}autoFocus/> \n                            <span className=\"help-block\">{this.state.emptyHelp}</span>\n                        </div>\n\n                        <div className=\"form-group\">\n                            <label htmlFor=\"\">Password: <span style={{color:\"red\"}}>* </span></label>\n\n                            <input type=\"password\" className=\"form-control\" id=\"password\" name=\"password\" style={{width: 300,height:40}} placeholder=\"Please enter your password\"\n                            value={this.state.password} onChange={evt => this.setState({\"password\":evt.target.value})}/>\n                            <span className=\"help-block\">{this.state.emptyHelp}</span>\n                        </div>\n\n\n                        <button type=\"button\" className=\"btn btn-dark\" style={{width: 200,height:40}} onClick={this.handleSubmit.bind(this)}>Login</button>\n                       \n                    </form>\n                    <div className=\"message\">\n                        <p>No account? <a href=\"/signup\">Sign up here</a>.</p>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}","import React,{Component} from 'react';\nimport Header from \"./Header\";\n\nexport default class Signup extends Component {\n    constructor(props) {\n        super(props);\n        \n        this.state = {\n            \"username\": \"\",\n            \"email\": \"\",\n            \"password\":\"\",\n            \"address\":\"\",\n            \"unameHelp\":\"\",\n            \"emailHelp\":\"\",\n            \"pwHelp\":\"\"\n        };\n    }\n \n\n    // Use AJAX to check whether username is unique or not.    \n    checkUsername() {\n    var username = this.state.username;\n    // Examine empty string. \n    if (username.trim().length == 0){\n        this.setState(\n                {unameHelp:'Username cannot be empty'}\n            );\n        return;\n    }\n    fetch('/checkUname/'+username,{\n            method:'get',\n            headers: {\"Content-Type\":\"application/json\"},\n        })\n        .then(response=>response.json())\n        .then(data => {\n            // If username is used, show the message in unameHelp state. \n            if(data.err_code == 1){\n            this.setState({unameHelp:data.message})\n        }else{\n            // If usernmae is verified, set unameHelp to empty. \n            this.setState({unameHelp:''})\n        }\n        }); \n\n    }\n\n\n    //Verify emial address. \n    checkEmail(){\n    var email = this.state.email;\n    var emailReg = /^([A-Za-z0-9_\\-\\.])+\\@([A-Za-z0-9_\\-\\.])+\\.([A-Za-z]{2,4})$/;\n    if (email.trim().length == 0){\n        this.setState({\n            emailHelp: '* must not be empty'\n        })\n    }else if (!emailReg.test(email)) {\n            this.setState({emailHelp: 'Please enter a valid email address.'})\n            return false;\n        }else{\n        this.setState({\n            emailHelp:''\n        })\n    }\n    }\n\n\n    // Verify password.\n    checkPw(){\n    var pw = this.state.password;\n    if (pw.trim().length == 0){\n        this.setState({\n            pwHelp: '* must not be empty'\n        })\n    }else{\n        this.setState({\n            pwHelp:''\n        })\n    }\n    }\n            \n             \n\n    handleSubmit(){   \n        // post request to server side     \n        fetch('/signup',{\n            method:'post',\n            body: JSON.stringify(this.state),\n            headers: {\"Content-Type\":\"application/json\"},\n        })\n        .then(response=>response.json())\n        .then(responseJson => {\n            \n            if(responseJson.err_code === 0){\n                // store username to local storage \n                localStorage.setItem(\"username\", this.state.username.trim());\n                window.location.href=\"/\";\n            }\n            else if (responseJson.err_code === 1){\n                alert(responseJson.message);\n            }\n\n        }).catch(function(e){\n            console.log('Oops,error');\n        })\n\n    \n    }\n\n\n\n     render(){\n        return(\n            <div align=\"center\">\n                \n\n                <div className=\"main\">\n                    <div className=\"header\">\n\n                        <h1>Sign Up</h1>\n                    </div>\n                    <form id=\"signup_form\">\n                        <div className=\"form-group\">\n                            <label htmlFor=\"email\">Email: <span style={{color:\"red\"}}>* </span> </label>\n\n                            <input type=\"email\" className=\"form-control\" id=\"email\" name=\"email\" style={{width: 300,height:40}} placeholder=\"Please enter an email\"\n                                   onChange={evt => this.setState({\"email\":evt.target.value})} onBlur={this.checkEmail.bind(this)}/>\n                            <span className=\"help-block\">{this.state.emailHelp}</span>\n                        </div>\n\n                        <div className=\"form-group\">\n                            <label htmlFor=\"username\">Username: <span style={{color:\"red\"}}>* </span> </label>\n                            <input type=\"text\" className=\"form-control\" id=\"username\" name=\"username\" style={{width: 300,height:40}}\n                                   placeholder=\"Please enter a username\" onChange={evt => this.setState({\"username\":evt.target.value})} onBlur={this.checkUsername.bind(this)}/>\n                            <span className=\"help-block\">{this.state.unameHelp}</span>\n                        </div>\n\n                        <div className=\"form-group\">\n                            <label htmlFor=\"password\">Password: <span style={{color:\"red\"}}>* </span> </label>\n                            <input type=\"password\" className=\"form-control\" id=\"password\" name=\"password\" style={{width: 300,height:40}}\n                                   placeholder=\"Please enter a password\" onChange={evt => this.setState({\"password\":evt.target.value})} onBlur={this.checkPw.bind(this)}/>\n                            <span className=\"help-block\">{this.state.pwHelp}</span>           \n                        </div>\n\n                        <div className=\"form-group\">\n                            <label htmlFor=\"address\">Address:  </label>\n                            <input type=\"text\" className=\"form-control\" id=\"address\" name=\"address\" style={{width: 300,height:40}}\n                                   placeholder=\"Please enter your address\" onChange={evt => this.setState({\"address\":evt.target.value})}/>        \n                        </div>\n\n                        <button type=\"button\" className=\"btn btn-dark\" style={{width: 200,height:40}} onClick={this.handleSubmit.bind(this)}>Sign up</button>\n                        </form>\n\n                        <div className=\"message\">\n                        <p>Already Sign Up? <a href=\"/Login\">Sign In here</a>.</p>\n                        </div>\n                </div>\n            </div>\n        );\n    }\n}\n\n","import React,{Component} from 'react';\nimport { Button, Input } from 'reactstrap';\n\n\n\nexport default class Shoppingcart extends Component {\n     constructor(props) {\n        super(props);\n        this.state = {\n        \t\"cartProducts\": [],\n          \"stockAvailable\": \" \",\n        \t\"subtotal\": \" \",\n        \t\"total\" : 0,\n        \t\"checkedItems\": []\n\n        };\n    // Get request to get the cart list of a specific user.     \n    fetch('/cartList',{\n            method:'get',\n            headers: {\"Content-Type\":\"application/json\"},\n        })\n        .then(response=>response.json())\n        .then(responseJson => {\n        if(responseJson.err_code ==1){\n          // If user does not log in, redirect to Login page. \n        \twindow.location.href = \"./Login\";\n        }\n        this.setState({\n            \"cartProducts\": responseJson,\n        })\n           console.log(responseJson)\n        })\n\n    }\n    \n\n    // Handle increase in quantity of a specific item in cart. \n    increaseQuan(index){\n    \t\n    \tvar currentQuan = this.state.cartProducts[index].pro_quan + 1;\n    \tvar currentCartProducts = this.state.cartProducts;\n    \tcurrentCartProducts[index].pro_quan = currentQuan;\n    \tthis.setState({\n    \t\tcartProducts: currentCartProducts\n    \t})\n    \tthis.handleQuanChange(index)\n     \n    }\n\n\n    // Handle decrease in quantity of a specific item in cart. \n    decreaseQuan(index){\n    \tvar currentCartProducts = this.state.cartProducts\n    \tvar currentQuan = currentCartProducts[index].pro_quan - 1;\n    \t// Make sure quantity is not less than 1. \n      if (currentQuan < 1 ){\n           alert (\"The minimum quantity is 1\");     \n        }else{\n            currentCartProducts[index].pro_quan = currentQuan;\n            this.setState({\n    \t\t      cartProducts: currentCartProducts\n    \t     })\n            this.handleQuanChange(index)\n        }\n    }\n    \n    \n    // Put request to update quantity change in database. \n    handleQuanChange(index){\n    \t\n    \tvar quan = {\"pro_quan\":this.state.cartProducts[index].pro_quan};\n        fetch('/updateQuantity/'+this.state.cartProducts[index]._id,{\n            method:'put',\n            body: JSON.stringify(quan),\n            headers: {\"Content-Type\":\"application/json\"}\n        })\n        .then(response=>response.json())\n        .then(responseJson => {\n            if(responseJson.err_code ==1){\n               alert (responseJson.message);\n            }\n        })\n    }\n\n\n    //Handel item removed from cart and delete corresponding item in database. \n    handleRemove(index){\n        console.log(index);\n        var cart_id = this.state.cartProducts[index]._id\n        if (window.confirm(\"Are you sure to remove this item from your cart?\")) {\n        fetch('/removeItem/'+cart_id,{\n            method:'delete'\n            \n        })\n        .then(response=>response.json())\n        .then(responseJson => {\n             window.location.href=\"/Shoppingcart\";\n            \n        })\n        } \n    }\n\n\n    // Calculate the total price of cart products. \n    caculateTotal(){\n       var total = this.state.total;\n       var i;\n       var subtotal;\n       for(i=0; i<this.state.cartProducts.length; i++ ){\n       \tsubtotal = this.state.cartProducts[i].pro_price * this.state.cartProducts[i].pro_quan;\n       \ttotal = total + subtotal;\n       }\n       return total\n    }\n    \n\n   // Handle checkbox. \n    handleCheckbox(index){\n      // Create an array called checkedItems to store index of checked cart products.   \n   \t  var cartIndex = this.state.checkedItems.indexOf(index);\n   \t  var originalCheckItems = this.state.checkedItems;\n      // If cart index already existed in the array, take it off when checkbox is clicked. \n   \t  if(cartIndex>-1){\n   \t  \toriginalCheckItems.splice(cartIndex,1);\n   \t  \tthis.setState({checkedItems:originalCheckItems});\n   \t  }else{\n       // If cart index is not existed in the array, put it into the array when checkbox is clicked.    \n   \t  \toriginalCheckItems.unshift(index)\n   \t  \tthis.setState({checkedItems:originalCheckItems})\n   \t  }\n\n    }\n\n\n    \n    handleCheckout(){    \n    \tvar i;\n    \tvar items = [];\n    \tvar checkedProTotal = 0;\n    \tvar userid = this.state.cartProducts[0].user_id;\n    \tvar date = new Date();\n    \tvar carts = [];\n        // If there is index in the array of checkedItems, it means there is item checked, then get the details of the checked item. \n        for(i=0; i < this.state.checkedItems.length; i ++){\n\n            var cartProduct = this.state.cartProducts[this.state.checkedItems[i]];\n            var item ={\n            \tpro_id : cartProduct.pro_id,\n                pro_name : cartProduct.pro_name,\n        \t    pro_pic : cartProduct.pro_pic,\n        \t    pro_quan : cartProduct.pro_quan,\n        \t    pro_size : cartProduct.pro_size,\n        \t    pro_price : cartProduct.pro_price * cartProduct.pro_quan\n            };\n            items[i] = item;\n            carts[i] = cartProduct._id;\n           \n            checkedProTotal += items[i].pro_price;\n        }\n\n        // Organize the order details which is going to store in database. \n        var order={\n        \tuser_id: userid,\n        \torder_date: date,\n        \torder_items: items,\n        \torder_total: checkedProTotal,\n        \tcart_ids : carts\n        }\n        // Make sure checkout items are checked. \n         if(this.state.checkedItems.length == 0){\n        alert(\"Please select your checkout item.\");\n      } else {\n        fetch('/order',{\n            method:'post',\n            body: JSON.stringify(order),\n            headers: {\"Content-Type\":\"application/json\"},\n        })\n        .then(response=>response.json())\n        .then(responseJson => {\n               \n            if(responseJson.err_code === 0){               \n                window.location.href=\"/Checkout/\"+responseJson.orderId;\n            }\n        })\n      }  \n    }\n    \n\n\n    showCartProducts(){\n    \tlet cartProducts = this.state.cartProducts.map((cartPro,index,array)=>{\n    \t\t\n      return(\n      \t<div key={cartPro._id}>\n          <div className=\"row\">\n          <div name=\"checkbox\" className=\"col-sm-1\">\n            <Input type=\"checkbox\"  onClick={this.handleCheckbox.bind(this,index)}/>{' '}\n          </div>\n\n          <div name=\"proImage\" className=\"col-sm-3\">\n          <a href = {\"/ProductDetails/\"+cartPro.pro_id}>\n          <img className=\"image\" style={{height:100,width:100}} src={cartPro.pro_pic} alt=\"product image\" />\n          </a>\n          </div>\n       \n          <div className=\"col\">\n          <div name=\"proDescrib\" className=\"description\" >\n           <a href = {\"/ProductDetails/\"+cartPro.pro_id}>\n           <span>{cartPro.pro_name}</span>\n           </a>\n           <span>{cartPro.pro_size}</span>\n          </div>\n          </div>\n          \n          <div className=\"col\">\n          <div name=\"proQuan\" className=\"quantity\" >\n           <button className=\"quan-button\" type=\"button\" name=\"increasebutton\" onClick={this.increaseQuan.bind(this,index)}>\n           +\n           </button>\n           <input type=\"text\" id={\"quantity_\"+index} name=\"quantity\" value={cartPro.pro_quan} onChange={evt => this.setState({})}/>\n           <button className=\"quan-button\" type=\"button\" name=\"decreasebutton\" onClick= {this.decreaseQuan.bind(this,index)}>\n           -\n           </button>\n          </div>\n          </div>\n          \n          <div className=\"col\">\n          <div name=\"subtotalPrice\" className=\"total-price\">\n           <span>$ {cartPro.pro_price*cartPro.pro_quan}</span>\n          </div>\n          </div>\n\n          <div className=\"col\">\n          <div>\n           <button type=\"button\" name=\"removeButton\" className=\"btn btn-dark\" onClick={this.handleRemove.bind(this,index)}>\n           Remove\n           </button>\n          </div>\n          </div>\n        \n         \n        </div>\n        <hr />\n        </div>\n          )\n\n    })\n    return cartProducts\n    }\n    \n\n\nrender(){\n\n        return(\n        <div>\n          <center name=\"cart\">\n            <h1>My Cart</h1>\n          </center>\n         \n          <div name=\"productList\"  className=\"container\">\n          {this.showCartProducts()}\n\n        <div className=\"row\">\n        <p name=\"totalPrice\" style={{marginLeft:900}}>\n        Total: {this.caculateTotal()}\n        </p>\n        </div>\n\n        \n        <div className=\"row\">\n           <button type=\"button\" name=\"checkoutButton\" className=\"btn btn-dark\" style={{marginLeft:900}} onClick={this.handleCheckout.bind(this)}>\n           Checkout\n           </button>\n        </div>\n\n        </div>\n        </div>      \n\n        );\n }\n\n}","import React, {\n    Component\n} from 'react';\nimport {\n  Carousel,\n  CarouselItem,\n  CarouselControl,\n  CarouselIndicators,\n  CarouselCaption\n} from 'reactstrap';\n\nconst items = [\n  {\n    src:'/img/homeimg/burberry.png', \n    altText: 'Burberry',\n    caption: 'Burberry New Collection'\n  },\n  {\n    src:'/img/homeimg/gucci.png', \n    altText: 'Gucci',\n    caption: 'Spring Collection'\n  },\n  {\n    src:'/img/homeimg/chanel.png', \n    altText: 'Chanel',\n    caption: 'Chanel New Collection'\n  }\n  ]\n    \n\n// Utilize Reactstrap Carousel to display the images in home page. \nexport default class Home extends Component {\n\n   constructor(props) {\n    super(props);\n    console.log(localStorage.loginInfor);\n    this.state = { activeIndex: 0 };\n    this.next = this.next.bind(this);\n    this.previous = this.previous.bind(this);\n    this.goToIndex = this.goToIndex.bind(this);\n    this.onExiting = this.onExiting.bind(this);\n    this.onExited = this.onExited.bind(this);\n  }\n\n  onExiting() {\n    this.animating = true;\n  }\n\n  onExited() {\n    this.animating = false;\n  }\n\n  next() {\n    if (this.animating) return;\n    const nextIndex = this.state.activeIndex === items.length - 1 ? 0 : this.state.activeIndex + 1;\n    this.setState({ activeIndex: nextIndex });\n  }\n\n  previous() {\n    if (this.animating) return;\n    const nextIndex = this.state.activeIndex === 0 ? items.length - 1 : this.state.activeIndex - 1;\n    this.setState({ activeIndex: nextIndex });\n  }\n\n  goToIndex(newIndex) {\n    if (this.animating) return;\n    this.setState({ activeIndex: newIndex });\n  }\n\n  render() {\n    const { activeIndex } = this.state;\n\n    const slides = items.map((item) => {\n      return (\n        <CarouselItem\n          onExiting={this.onExiting}\n          onExited={this.onExited}\n          key={item.src}\n        >\n          <center>\n          <img src={item.src} alt={item.altText} style={{height:500,width:1200}}/>\n          </center>\n          <CarouselCaption captionText={item.caption} captionHeader={item.caption} />\n        </CarouselItem>\n      );\n    });\n\n    return (\n      <Carousel\n        activeIndex={activeIndex}\n        next={this.next}\n        previous={this.previous}\n      >\n        <CarouselIndicators items={items} activeIndex={activeIndex} onClickHandler={this.goToIndex} />\n        {slides}\n        <CarouselControl direction=\"prev\" directionText=\"Previous\" onClickHandler={this.previous} />\n        <CarouselControl direction=\"next\" directionText=\"Next\" onClickHandler={this.next} />\n      </Carousel>\n    );\n  }\n}\n","import React,{Component} from 'react';\n\n\nexport default class Designers extends Component {\n    constructor(props){\n       super(props);\n       this.state = {\n            \"alldesigners\": []\n        }\n\n    // Get designer from database \n    fetch('/alldesigners',{\n            method:'get',\n            headers: {\"Content-Type\":\"application/json\"},\n        })\n        .then(response=>response.json())\n        .then(responseJson => {\n        console.log(responseJson);\n        this.setState({\n            \"alldesigners\": responseJson,\n        })\n\n        })\n\n    }\n    \n    listDesigners(){\n      // List designers in alphabetical order\n    \tlet sortDesigners = this.state.alldesigners.sort(function(a,b){\n\n          var desA = a.d_name.toUpperCase();\n          var desB = b.d_name.toUpperCase();\n      \n           if (desA < desB) {return -1;}\n          \n    \t})\n     \n    \tlet designerList = sortDesigners.map((designer,index,array)=>{\n      return(\n      \t<a className=\"text-dark\" href={\"/ProductsByDesigner/\"+designer._id}>\n      \t<center key={index}> {designer.d_name}</center>\n      \t</a>\n      \t);\t\n    }) \n        return designerList\n\n     }\n   \n\nrender(){\n\n\n        return(\n\n        <div> \n        <center className=\"text-white bg-dark\" style={{fontSize:30}}> All Designers </center>\n         {this.listDesigners()}\n        </div>\n\n        );\n }\n\n}","import React,{Component} from 'react';\n\n\nexport default class Bags extends Component {\n    \n\n    \n\nrender(){\n        return(\n\n        <center> \n        <h1> Coming soon...  </h1>\n\n        </center>\n\n        );\n }\n\n}","import React,{Component} from 'react';\nimport { Card, CardImg, CardText, CardBody,\n  CardTitle, CardSubtitle, Button } from 'reactstrap';\nimport { Dropdown, DropdownToggle, DropdownMenu, DropdownItem } from 'reactstrap';\n\n\nexport default class Shoes extends Component {\n    constructor(props) {\n        super(props);\n        console.log(localStorage);\n\n        this.toggle = this.toggle.bind(this);\n        this.state = {\n            \"allshoes\": [],\n            \"search\": '',\n            \"dropdownOpen\": false,\n            \"indication\": ''\n        }; \n        \n   \n        // Get all shoes from databse. \n        fetch('/api/shoes',{\n            method:'get',\n            headers: {\"Content-Type\":\"application/json\"},\n        })\n        .then(response=>response.json())\n        .then(responseJson => {\n        console.log(responseJson);\n        this.setState({\n            \"allshoes\": responseJson,\n        })\n\n        })\n    }\n\n\n    // Handle toggle drop. \n    toggle() {\n    this.setState(prevState => ({\n      dropdownOpen: !prevState.dropdownOpen\n    }));\n  }\n\n\n    //Sorting prices by ascending order. \n    sortByPriceAsc() {\n    this.setState(prevState => {\n      this.state.allshoes.sort((a, b) => (a.p_price - b.p_price));\n      this.state.indication = \"⬇️\"\n  });\n    \n  }\n    \n\n    // Sorting prices by descending order. \n    sortByPriceDesc() {\n    this.setState(prevState => {\n      this.state.allshoes.sort((a, b) => (b.p_price - a.p_price));\n      this.state.indication = \"⬆️\"\n  });\n  }\n\n\n    // List products with keyword filtering function. The keywords including product names and product descriptions.  \n    filterList(){ \n    let updatedList = this.state.allshoes.filter((shoes)=>{\n      return shoes.p_name.toLowerCase().indexOf(this.state.search.toLowerCase())!== -1 \n      || shoes.p_describ.toLowerCase().indexOf(this.state.search.toLowerCase())!== -1\n    })\n    let shoeslist = updatedList.map((shoes,index,array)=>{\n      return(     \n    <div style={{float :'left',border:2}} key={index}>\n      <Card style={{height:350,width:300}}>\n      <a href={\"/ProductDetails/\"+shoes._id}>\n        <CardImg style={{height:200,width:200}} src={shoes.p_pic[0]} alt=\"product image\" />\n      </a>\n        <CardBody>\n      <a href={\"/ProductDetails/\"+shoes._id}>\n          <CardTitle>{shoes.p_name}</CardTitle>\n     </a>\n          <CardSubtitle>AU${shoes.p_price}</CardSubtitle>\n          <CardText>{shoes.p_describ}</CardText>\n          \n        </CardBody>\n      </Card>\n    </div>\n      \n          );\n    })\n    return shoeslist\n  }\n\n\n\nrender(){\n  \n    return(\n    \t<div>\n    \n    <input placeholder=\"Search\" style={{height:45,width:300, float: 'right'}} onChange={evt => this.setState({\"search\":evt.target.value})} value={this.state.search} type=\"text\"/>\n\n    <Dropdown isOpen={this.state.dropdownOpen} toggle={this.toggle} style={{float: 'left'}}>\n        <DropdownToggle caret>\n          Sort by {this.state.indication}\n        </DropdownToggle>\n        <DropdownMenu>\n          \n          <DropdownItem onClick={this.sortByPriceDesc.bind(this)}>Price high to low</DropdownItem>\n          <DropdownItem onClick={this.sortByPriceAsc.bind(this)}>Price low to high</DropdownItem>\n          \n        </DropdownMenu>\n      </Dropdown>\n\n     <br />\n     <br />  \n        {this.filterList()}\n        </div>\n    \t)\n\t\n\n }\n\n}","import React,{Component} from 'react';\nimport { Button, Form, FormGroup, Label, Input, FormText } from 'reactstrap';\nimport {\n  Carousel,\n  CarouselItem,\n  CarouselControl,\n  CarouselIndicators,\n  CarouselCaption\n} from 'reactstrap';\n\n\nexport default class ProductDetails extends Component {\n    constructor(props) {\n        super(props);\n        console.log(localStorage);\n        this.state = {\n        \t\"proId\": this.props.match.params.id,\n            \"userId\": localStorage.userId,\n            \"selectedQuan\": 1,\n            \"selectedSize\":'',\n            \"product\": '',\n            \"stocks\": [],\n            \"pics\": []\n          \n        }; \n    \n    // Get request with specific product id as parameter to get the corresponding product.    \n    fetch('/productDetail/'+this.props.match.params.id,{\n            method:'get',\n            headers: {\"Content-Type\":\"application/json\"},\n        })\n        .then(response=>response.json())\n        .then(responseJson => {\n            \n             this.setState({\n             \t\"product\":responseJson[0],\n             \t\"stocks\": responseJson[0].p_stock,\n             \t\"pics\": responseJson[0].p_pic,\n              \"selectedSize\": responseJson[0].p_stock[0].size\n\n             })\n        })\n     \n    }\n\n\n    \n    handleSubmit(){\n      // Make sure user logs in before adding product to cart. \n      if (localStorage.username.trim().length === 0){\n        alert(\"Please login before you shop.\");\n      }\n      // Post request of the selected items\n      else{\n        fetch('/shoppingCart',{\n            method:'post',\n            body: JSON.stringify(this.state),\n            headers: {\"Content-Type\":\"application/json\"},\n        })\n        .then(response=>response.json())\n        .then(responseJson => {\n             console.log(responseJson);\n\n            if(responseJson.err_code === 0){\n               \n                  window.location.href=\"/Shoppingcart\"\n               \n            }\n            else if(responseJson.err_code === 1){\n                alert(responseJson.message);\n            }else if(responseJson.err_code === 2){\n                    alert(responseJson.message);\n                    \n                }   \n\n        })\n\n    }}\n\n\n    // List different sizes of one product. \n    listSize(){\n    \t\n    \tvar sizeList = this.state.stocks.map((stock,index,array)=>{\n                 return(\n                 <option key={index}>{stock.size}</option>\n                      \n      \t         )  \n     })\n    \treturn sizeList\n    }\n\n    \n\nrender(){\n       \n   \n       return(\n       <div className=\"row\">\n       \n        <div className=\"col\">\n        <img style={{height:400,width:400}} src={this.state.pics[0]} alt=\"product image\" />\n        </div>\n\n        <div style={{width: 500}} className=\"float-right\"> \n        <h2> {this.state.product.p_name} </h2>\n        <p> {this.state.product.p_describ} </p>\n        <p> AU${this.state.product.p_price} </p>\n\n        <div>\n        <FormGroup>\n          <Label for=\"exampleSelect\">Size:</Label>\n          <Input type=\"select\" name=\"size\" id=\"size\" style={{width: 100,height:40}} \n                 onChange={evt => this.setState({\"selectedSize\":evt.target.value})}>\n              {this.listSize()}  \n          </Input>\n        </FormGroup>\n        \n\n        <FormGroup>\n          <Label for=\"exampleSelect\">Quantity:</Label>\n          <Input type=\"select\" name=\"quantity\" id=\"quantity\" style={{width: 100,height:40}} \n                 onChange={evt => this.setState({\"selectedQuan\":evt.target.value})}>\n             \n            <option>1</option>\n            <option>2</option>\n            <option>3</option>\n            <option>4</option>\n            <option>5</option>\n          </Input>\n        </FormGroup>\n        </div>\n\n        <button type=\"button\" className=\"btn btn-dark\" style={{width: 200,height:40}} onClick={this.handleSubmit.bind(this)}>Add to Shopping Cart</button>\n        </div>\n\n      </div>\n        );\n }\n\n}","import React,{Component} from 'react';\nimport { Card, CardImg, CardText, CardBody,\n  CardTitle, CardSubtitle, Button } from 'reactstrap';\n\nexport default class ProductsByDesigner extends Component {\n    constructor(props){\n       super(props);\n       this.state = {\n            \"designerDetails\":'',\n            \"products\":[]\n        }\n    \n    // Get designer details \n    fetch('/designer/'+this.props.match.params.id,{\n            method:'get',\n            headers: {\"Content-Type\":\"application/json\"},\n        })\n        .then(response=>response.json())\n        .then(responseJson => {\n             console.log(responseJson);\n             this.setState({\n             \t\"designerDetails\":responseJson[0]\n             })\n        })\n    \n    // Get Products under a specific designer        \n    fetch('/designerPro/'+this.props.match.params.id,{\n            method:'get',\n            headers: {\"Content-Type\":\"application/json\"},\n        })\n        .then(response=>response.json())\n        .then(responseJson => {\n             console.log(responseJson);\n             this.setState({\n             \t\"products\":responseJson\n             })\n        })\n\n    }\n\n\n    // List all products under a requested designer.\n    listProductsByDesigner(){\n    \tlet list = this.state.products.map((pro,index,array)=>{\n      return(\n    \n         \n    <div className=\"float-left\" style={{border:2}} key={index}>\n      <Card style={{height:350,width:300}}>\n      <a href={\"/ProductDetails/\"+pro._id}>\n        <CardImg style={{height:200,width:200}} src={pro.p_pic[0]} alt=\"product image\" />\n      </a>\n        <CardBody>\n      <a href={\"/ProductDetails/\"+pro._id}>\n          <CardTitle>{pro.p_name}</CardTitle>\n     </a>\n          <CardSubtitle>AU${pro.p_price}</CardSubtitle>\n          <CardText>{pro.p_describ}</CardText>\n          \n        </CardBody>\n      </Card>\n    </div>\n      \n          );\n\n    })\n    return list\n    }\n    \n    \n\n\n    render(){\n\n    \treturn(\n      <div>\n\n      <div>\n    \t <center className=\"text-white bg-dark\" style={{fontSize:30}}> {this.state.designerDetails.d_name} </center>\n      </div>\n\n      <div className=\"row\" >\n         <div className=\"col-sm-6\">\n         <p className=\"font-italic float-left\" style={{width: 500, height: 350, fontWeight:'bold'}}> {this.state.designerDetails.d_desc} </p>\n         </div>\n         <div className=\"col-sm-6\">\n         <img className=\"float-sm-right\" style={{width: 700, height: 350}} src={this.state.designerDetails.d_pic} alt=\"designerpic\"/>\n        </div>\n      </div> \n\n      <div>\n         {this.listProductsByDesigner()}\n      </div>\n\n      </div>\n    \t\t);\n    }\n\n\n}","import React,{Component} from 'react';\nimport { Table } from 'reactstrap';\n\n\nexport default class Checkout extends Component {\n    constructor(props) {\n        super(props);\n        this.state={\n        \t\"order\": {},\n          \"order_items\" : []\n        };\n\n   }\n        \n     componentWillMount() {\n        fetch('/orderList/'+this.props.match.params.id,{\n            method:'get',\n            headers: {\"Content-Type\":\"application/json\"},\n        })\n        .then(response=>response.json())\n        .then(responseJson => {\n             console.log(responseJson);\n             this.setState({\n              \"order\":responseJson[0],\n              \"order_items\" : responseJson[0]['order_items']  \n             })\n        })\n     }   \n        \n\n        showOrderedProducts(){\n         \n         let orderedProducts= this.state.order_items.map((orderedPro,index,arr)=>{\n             \n             return(\n                      <tr>\n                        <td><img style={{height:80,width:80}} src={orderedPro.pro_pic} alt= \"product img\" /></td>\n                        <td>{orderedPro.pro_name}</td>\n                        <td>Size: {orderedPro.pro_size}</td>\n                        <td>Quan: {orderedPro.pro_quan} </td>\n                        <td>Sub: ${orderedPro.pro_price} </td>\n                      </tr>    \n             \n              );\n          \n         })\n          return orderedProducts\n      }\n\n     render(){\n        return(\n        <div>\n        <center>\n            <h1>Thank you for your order!</h1>\n        </center>\n        <p> Order date: {this.state.order.order_date} </p>\n        <Table bordered>\n          <tbody>\n        {this.showOrderedProducts()}\n          </tbody>\n        </Table>\n        <h5 style={{textAlign: 'right'}}> Order Total: ${this.state.order.order_total} </h5> \n        </div>\n        );\n\n      \n }\n\n}","import React,{Component} from 'react';\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\nimport { Nav, \n  NavItem, \n  NavLink,\n  Navbar,\n  NavbarToggler } from 'reactstrap';\n\n\nimport Login from './Login';\nimport Signup from './Signup';\nimport Shoppingcart from './Shoppingcart';\nimport Home from './Home';\nimport Designers from './Designers';\nimport Bags from './Bags';\nimport Shoes from './Shoes';\nimport ProductDetails from './ProductDetails';\nimport ProductsByDesigner from './ProductsByDesigner';\nimport Checkout from './Checkout';\n\n\nexport default class Header extends Component {\n    constructor(props) {\n        super(props);\n        this.state={\n          \"isLoggedin\": false,\n          \"username\": \"\"\n        }\n        //Check whether user logs in\n        fetch('/checkLogin',{\n          method: 'get',\n          headers: {\"Content-Type\":\"application/json\"}\n        })\n        .then(response=>response.json())\n        .then(responseJson=>{\n            \n          if (responseJson.err_code == 0){\n            this.setState({\n                // if user has loggin in, set username to State\n                \"isLoggedin\": true,\n                \"username\": \"Hi,\"+localStorage.username\n              }) \n            }else{\n            this.setState({\n                //if user has not logged in, set username to empty\n                \"isLoggedin\": false,\n                \"username\": \"\"\n              }) \n          \n            }\n        })\n\n     }\n\n\n   // Only user who logs in can view his shoppingcart.\n   handleShoppingCart(){\n    if (this.state.username.trim().length === 0){\n        alert(\"Please login to browse your shopping cart.\");\n      }else{\n        window.location.href=\"/Shoppingcart\";\n      }\n   }\n    \n\n    // Clear user session and localstorage whe user logs out. \n    handleLogOut(){\n      fetch('clearSession',{\n            method:'delete',\n            headers: {\"Content-Type\":\"application/json\"}\n        })\n        .then(response=>response.json())\n        .then(responseJson => {\n            if(responseJson.err_code == 0){\n                 localStorage.username = \"\";\n                 localStorage.userId = \"\";\n                 window.location.href=\"/\";\n            }\n        })\n      \n    }\n\n\n\n   // Handle changes of Login and Logout button according to user status. \n    switchButton(){\n      if (this.state.isLoggedin){\n          return(\n            <div>\n            <button className=\"btn btn-dark\" style={{color: 'white', height:40}} onClick = {() => this.handleLogOut()}>Logout </button>\n            </div>\n            )\n        }else{\n          return(\n            <NavLink className=\"btn btn-dark\" style={{color: 'white',height:40}} href='/login' >Login</NavLink>\n            )\n        }         \n    }\n\n\n    \n    render(){\n      return(\n\n<div>  \n<div className=\"WebName\"> <b>Fashion Lead </b></div>\n<div>\n\n<Navbar color=\"light\" light expand=\"md\">\n<Nav className=\"ml-auto\" navbar>\n              <p className=\"text-dark\"> {this.state.username} </p>\n              <NavItem>\n                <button className=\"btn btn-dark\" style={{color: 'white', height:40, marginRight:10}} onClick = {() => this.handleShoppingCart()}>ShoppingCart </button>\n              </NavItem>\n              <NavItem>\n              {this.switchButton()}\n              </NavItem>\n             \n              <NavItem>\n                <NavLink className=\"btn btn-dark\" style={{color: 'white',height:40, marginLeft:3}} href=\"/Signup\">Signup</NavLink>\n              </NavItem>\n</Nav>              \n</Navbar>\n</div>\n \n <div>\n          <Nav tabs>\n          <NavItem>\n            <NavLink className=\"text-dark\" href=\"/\" active>Home</NavLink>\n          </NavItem>\n          \n          <NavItem>\n            <NavLink className=\"text-dark\" href=\"/Designers\">Designers</NavLink>\n          </NavItem>\n           <NavItem>\n            <NavLink className=\"text-dark\" href=\"/Shoes\">Shoes</NavLink>\n          </NavItem>\n          <NavItem>\n            <NavLink className=\"text-dark\" href=\"/Bags\">Bages</NavLink>\n          </NavItem>          \n\n          </Nav>\n  </div>\n \n\n  {/* Set routes and their corresponding components. */}\n  <Router>  \n      <div>\n      <Route exact path=\"/\" component={Home} />\n      <Route exact path=\"/Designers\" component={Designers} />\n      <Route exact path=\"/Bags\" component={Bags} />\n      <Route exact path=\"/Shoes\" component={Shoes} />\n      <Route path=\"/Login\" component={Login} />\n      <Route path=\"/Signup\" component={Signup} />\n      <Route path=\"/Shoppingcart\" component={Shoppingcart} />\n      <Route path=\"/ProductDetails/:id\" component={ProductDetails}/>\n      <Route path=\"/ProductsByDesigner/:id\" component={ProductsByDesigner}/>\n      <Route path=\"/Checkout/:id\" component={Checkout}/>\n      </div>\n\n  </Router>\n  </div>\n)\n\n\n    }\n\n    }\n\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport * as serviceWorker from './serviceWorker';\nimport {\n    BrowserRouter as Router,\n    Route,\n    Link\n} from \"react-router-dom\";\nimport App from './App';\nimport Header from './Header';\n\nReactDOM.render( < Header / > , document.getElementById('root'));\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();"],"sourceRoot":""}